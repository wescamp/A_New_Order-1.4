#textdomain wesnoth-A_New_Order
#define EGETUNIT_ATTR WHAT VAR
    [store_unit]
        variable=ano_tmp
        [filter]
            x=$x1
            y=$y1
        [/filter]
    [/store_unit]
    {MESSAGE Assassin () () _"getunit $x1 : $y1 : $ano_tmp.description"}
    [set_variable]
        name={VAR}
        value=$ano_tmp.{WHAT}
    [/set_variable]
    {CLEAR_VARIABLE ano_tmp}
#enddef
#define SETVAL NAME VARIABLE VALUE
    [store_unit]
        variable=tmp
        kill=yes
        [filter]
            description={NAME}
        [/filter]
    [/store_unit]
    [set_variable]
        name=tmp.{VARIABLE}
        value={VALUE}
    [/set_variable]
    [unstore_unit]
        variable=tmp
    [/unstore_unit]
    [clear_variable]
        name=tmp
    [/clear_variable]
#enddef
#define OPVAL NAME VARIABLE OP VALUE
    [store_unit]
        variable=tmp
        kill=yes
        [filter]
            description={NAME}
        [/filter]
    [/store_unit]
    [set_variable]
        name=tmp.{VARIABLE}
        {OP}={VALUE}
    [/set_variable]
    [unstore_unit]
        variable=tmp
    [/unstore_unit]
    [clear_variable]
        name=tmp
    [/clear_variable]
#enddef
#define RECALL Name
    [recall]
        description={Name}
    [/recall]
#enddef
#define RECALLXY Name X Y
    [recall]
        description={Name}
        x,y={X},{Y}
    [/recall]
#enddef
#define REME_DEATH_N
    [event]
        name=die
        [filter]
            description=Reme Carrenemoe
        [/filter]
        {MSG_Reme _"I can't hold my sword anymore.. I can't ..."}
    [/event]
#enddef
#define REUMARIO_DEATH
    [event]
        name=die
        [filter]
            description=Reumario
        [/filter]
        {MESSAGE Reumario (portraits/reumario.png) ()
        _"My ancestors, I am coming to you! I hope I have not failed you.."}
    [/event]
#enddef
#define REGVEN_DEATH
    [event]
        name=die
        [filter]
            description=Karl Regven
        [/filter]
        {MESSAGE (Karl Regven) (portraits/regven.png) ()
        _"I'm not afraid.. I would just want to smoke a little longer.."}
    [/event]
#enddef
#define YARANOV_DEATH
    [event]
        name=die
        [filter]
            description=Andrey Yaranov
        [/filter]
        {MSG_Yaranov _"Aragwaiths die without fear!"}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef
#define LORIN_DEATH
    [event]
        name=die
        [filter]
            description=Lady Lorin
        [/filter]
        {MSG_Lorin _"That's not fair!"}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef
#define CHANGE_TYPE DESC VALUE
    [store_unit]
        [filter]
            description={DESC}
        [/filter]
        kill=yes
        variable=ano_change_side_tmp
    [/store_unit]
    [set_variable]
        name=ano_change_side_tmp.type
        value={VALUE}
    [/set_variable]
    [unstore_unit]
        variable=ano_change_side_tmp
    [/unstore_unit]
    [clear_variable]
        name=ano_change_side_tmp
    [/clear_variable]
#enddef
#define CHANGE_SIDE DESC VALUE
    [store_unit]
        [filter]
            description={DESC}
        [/filter]
        kill=yes
        variable=ano_change_side_tmp
    [/store_unit]
    [set_variable]
        name=ano_change_side_tmp.side
        value={VALUE}
    [/set_variable]
    [clear_variable]
        name=ano_change_side_tmp.status
    [/clear_variable]
    [clear_variable]
        name=ano_change_side_tmp.ai_special
    [/clear_variable]
    [unstore_unit]
        variable=ano_change_side_tmp
    [/unstore_unit]
    [clear_variable]
        name=ano_change_side_tmp
    [/clear_variable]
#enddef
#define REME_DEATH
    [event]
        name=die
        [filter]
            description=Reme Carrenemoe
        [/filter]
        {MSG_Reme
        _"I can't hold my sword anymore.. I can't ..."}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef
#define VARUNIT ARRAY INDEX UNIT
    {VARIABLE ({ARRAY}[{INDEX}].description) (${UNIT}.description)}
    {VARIABLE ({ARRAY}[{INDEX}].experience) (${UNIT}.experience)}
    {VARIABLE ({ARRAY}[{INDEX}].gender) (${UNIT}.gender)}
    {VARIABLE ({ARRAY}[{INDEX}].type) (${UNIT}.type)}
    {VARIABLE ({ARRAY}[{INDEX}].unrenamable) (${UNIT}.unrenamable)}
    {VARIABLE ({ARRAY}[{INDEX}].upkeep) (${UNIT}.upkeep)}
    {VARIABLE ({ARRAY}[{INDEX}].user_description) (${UNIT}.user_description)}
    {FOREACH ({UNIT}.modifications.trait) arr_in}
    {VARIABLE ({ARRAY}[{INDEX}].traits) (${UNIT}.modifications.trait[$arr_in].id)}
    {NEXT arr_in}
#enddef
#define FVAR VAR1 VAR2
    [set_variable]
        name={VAR1}
        format={VAR2}
    [/set_variable]
#enddef
#define VARTOUNIT ARRAY INDEX SIDE X Y
    {FVAR (desc_tmp) (${ARRAY}[{INDEX}].description) }
    {FVAR (u_tmp) (${ARRAY}[{INDEX}].user_description) }
    {FVAR (exp_tmp) (${ARRAY}[{INDEX}].experience)}
    {FVAR (gender_tmp) (${ARRAY}[{INDEX}].gender) }
    {FVAR (type_tmp) (${ARRAY}[{INDEX}].type)}
    {FVAR (upkeep_tmp) (${ARRAY}[{INDEX}].upkeep)}
    {FVAR (id_tmp) (${ARRAY}[{INDEX}].traits)}
    #Only ONE trait is saved: intelligent,strong,quick, resilient, otherwise loyal
    [if]
        [variable]
            name=id_tmp
            equals="resilient"
        [/variable]
        [then]
            [unit]
                description=$desc_tmp
                experience=$exp_tmp
                type=$type_tmp
                x={X}
                y={Y}
                side={SIDE}
                gender=$gender_tmp
                upkeep=$upkeep_tmp
                user_description=$u_tmp
                [modifications]
                    {TRAIT_RESILIENT}
                [/modifications]
            [/unit]
        [/then]
        [else]
            [if]
                [variable]
                    name=id_tmp
                    equals="quick"
                [/variable]
                [then]
                    [unit]
                        description=$desc_tmp
                        experience=$exp_tmp
                        type=$type_tmp
                        x={X}
                        y={Y}
                        side={SIDE}
                        gender=$gender_tmp
                        upkeep=$upkeep_tmp
                        user_description=$u_tmp
                        [modifications]
                            {TRAIT_QUICK}
                        [/modifications]
                    [/unit]
                [/then]
                [else]
                    [if]
                        [variable]
                            name=id_tmp
                            equals="strong"
                        [/variable]
                        [then]
                            [unit]
                                description=$desc_tmp
                                experience=$exp_tmp
                                type=$type_tmp
                                x={X}
                                y={Y}
                                side={SIDE}
                                gender=$gender_tmp
                                upkeep=$upkeep_tmp
                                user_description=$u_tmp
                                [modifications]
                                    {TRAIT_STRONG}
                                [/modifications]
                            [/unit]
                        [/then]
                        [else]
                            [if]
                                [variable]
                                    name=id_tmp
                                    equals="intelligent"
                                [/variable]
                                [then]
                                    [unit]
                                        description=$desc_tmp
                                        experience=$exp_tmp
                                        type=$type_tmp
                                        x={X}
                                        y={Y}
                                        side={SIDE}
                                        gender=$gender_tmp
                                        upkeep=$upkeep_tmp
                                        user_description=$u_tmp
                                        [modifications]
                                            {TRAIT_INTELLIGENT}
                                        [/modifications]
                                    [/unit]
                                [/then]
                                [else]
                                    [unit]
                                        description=$desc_tmp
                                        experience=$exp_tmp
                                        type=$type_tmp
                                        x={X}
                                        y={Y}
                                        side={SIDE}
                                        gender=$gender_tmp
                                        upkeep=$upkeep_tmp
                                        user_description=$u_tmp
                                        [modifications]
                                            {TRAIT_LOYAL}
                                        [/modifications]
                                    [/unit]
                                [/else]
                            [/if]
                        [/else]
                    [/if]
                [/else]
            [/if]
        [/else]
    [/if]
    {CLEAR_VARIABLE u_tmp}
    {CLEAR_VARIABLE desc_tmp}
    {CLEAR_VARIABLE exp_tmp}
    {CLEAR_VARIABLE type_tmp}
    {CLEAR_VARIABLE gender_tmp}
    {CLEAR_VARIABLE upkeep_tmp}
    {CLEAR_VARIABLE id_tmp}
#enddef
#define STOREUNIT X Y
    [store_unit]
        [filter]
            x={X}
            y={Y}
        [/filter]
        variable=ano_units_tmp
        kill=yes
    [/store_unit]
    {VARUNIT ano_units $ano_units_last_index ano_units_tmp}
    {VARIABLE_OP ano_units_last_index add 1}
#enddef
#define STORERECALL ANO_LIST
    [recall]
        side=1
        x=1
        y=1
    [/recall]
    [if]
        [have_unit]
            x=1
            y=1
        [/have_unit]
        [then]
            [set_variable]
                name=ano_ok_tmp
                value=yes
            [/set_variable]
            [store_unit]
                [filter]
                    x=1
                    y=1
                [/filter]
                variable=ano_units_tmp
                kill=yes
            [/store_unit]
            {VARUNIT ({ANO_LIST}) $ano_recalls_last_index ano_units_tmp}
            {VARIABLE_OP ano_recalls_last_index add 1}
        [/then]
        [else]
            [set_variable]
                name=ano_ok_tmp
                value=no
            [/set_variable]
        [/else]
    [/if]
#enddef
#define RECALL_ALL
    [set_variable]
        name=ano_ok_tmp
        value=yes
    [/set_variable]
    [while]
        [variable]
            name=ano_ok_tmp
            equals=yes
        [/variable]
        [do]
            [recall]
                side=1
                x=1
                y=1
            [/recall]
            [if]
                [have_unit]
                    x=1
                    y=1
                [/have_unit]
                [then]
                    [teleport]
                        [filter]
                            x=1
                            y=1
                        [/filter]
                        x=10
                        y=10
                    [/teleport]
                [/then]
                [else]
                    {VARIABLE ano_ok_tmp no}
                [/else]
            [/if]
        [/do]
    [/while]
    [clear_variable]
        name=ano_ok_tmp
    [/clear_variable]
#enddef
#define RECALL_AND_STORE_ALL ANO_LIST
    {VARIABLE ano_recalls_last_index 0}
    [set_variable]
        name=ano_ok_tmp
        value=yes
    [/set_variable]
    [while]
        [variable]
            name=ano_ok_tmp
            equals=yes
        [/variable]
        [do]
            {STORERECALL ({ANO_LIST}) }
        [/do]
    [/while]
    [clear_variable]
        name=ano_ok_tmp
    [/clear_variable]
#enddef
#define KAREN_DEATH
    [event]
        name=die
        [filter]
            description=Karen
        [/filter]
        {MSG_Karen _"Father! Father! I am loosing my..."}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef
#define RUVIO_DEATH
    [event]
        name=die
        [filter]
            description=Ruvio
        [/filter]
        {MSG_Ruvio _"No! I have still so much to do!"}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef
#define CLEAR_RECALL
    [set_variable]
        name=ano_ok_tmp
        value=yes
    [/set_variable]
    [while]
        [variable]
            name=ano_ok_tmp
            equals=yes
        [/variable]
        [do]
            [recall]
                side=1
                x=1
                y=1
            [/recall]
            [if]
                [have_unit]
                    x=1
                    y=1
                    side=1
                [/have_unit]
                [then]
                    [set_variable]
                        name=ano_ok_tmp
                        value=yes
                    [/set_variable]
                    [store_unit]
                        [filter]
                            x=1
                            y=1
                        [/filter]
                        variable=ano_units_tmp
                        kill=yes
                    [/store_unit]
                    {CLEAR_VARIABLE ano_units_tmp}
                [/then]
                [else]
                    [set_variable]
                        name=ano_ok_tmp
                        value=no
                    [/set_variable]
                [/else]
            [/if]
        [/do]
    [/while]
    [clear_variable]
        name=ano_ok_tmp
    [/clear_variable]
#enddef
#define MOVETO X Y DESC
    name=moveto
    [filter]
        x={X}
        y={Y}
        description={DESC}
    [/filter]
#enddef
#define DIE  DESC
    name=die
    [filter]
        description={DESC}
    [/filter]
#enddef
#define KILLEDBY  DESC DESC2
    name=die
    [filter]
        description={DESC}
    [/filter]
    [filter_second]
        description={DESC2}
    [/filter_second]
#enddef
#define LABEL X Y TEXT
    [label]
        x={X}
        y={Y}
        text={TEXT}
    [/label]
#enddef
#define NOTIMPLEMENTED
    {MESSAGE narrator (wesnoth-icon.png) ()
    _"This is not implemented in current version of the scenario. Please, wait at least one week and download new campaign version from campaign server to see whether it will be implemented"}
#enddef
#define DEBUGMSG0
    {MESSAGE narrator (wesnoth-icon.png) ()
    _"This is debug message. If you see it, then it means I forgot to delete it from release scenario."}
#enddef
#define DEBUGMSG1 TEXT
    {MESSAGE narrator (wesnoth-icon.png) ()
    _"This is debug message.  If you see it, then it means I forgot to delete it from release scenario: ' {TEXT} '"}
#enddef
#define NEXT_SCENARIO RESULT SCENARIO BONUS
    [endlevel]
        next_scenario={SCENARIO}
        result={RESULT}
        bonus={BONUS}
    [/endlevel]
#enddef
#define VARLOG VAR LOG VAL
    [variable]
        name={VAR}
        {LOG}={VAL}
    [/variable]
#enddef
#define TELEPORT UNIT X Y
    [teleport]
        [filter]
            description={UNIT}
        [/filter]
        x,y={X},{Y}
    [/teleport]
#enddef
#define ALL_ANO_DEATHS
    {LORIN_DEATH}
    {YARANOV_DEATH}
    {REUMARIO_DEATH}
    {REME_DEATH_N}
    {KAREN_DEATH}
    {RUVIO_DEATH}
    {REGVEN_DEATH}
    [event]
        name=die
        [filter]
            description=Gawen Hagarthen
        [/filter]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef
#This is from Under the Burning Suns by Quartex
# create a unit with full upkeep and traits
#define UNIT_T TYPE DESC SIDE X Y
    {RANDOM_TRAIT_UNIT ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
#enddef
# MACROS to implement random traits
# creates one unit with full upkeep and 2 random traits
#define RANDOM_TRAIT_UNIT TYPE DESC SIDE X Y
    {RANDOM 1..6}
    {TRAIT_IF 1 (quick,resilient) ({TRAIT_QUICK}) ({TRAIT_RESILIENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
    {TRAIT_IF 2 (strong,resilient) ({TRAIT_STRONG}) ({TRAIT_RESILIENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
    {TRAIT_IF 3 (intelligent,resilient) ({TRAIT_INTELLIGENT}) ({TRAIT_RESILIENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
    {TRAIT_IF 4 (strong,quick) ({TRAIT_STRONG}) ({TRAIT_QUICK}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
    {TRAIT_IF 5 (strong,intelligent) ({TRAIT_STRONG}) ({TRAIT_INTELLIGENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
    {TRAIT_IF 6 (quick,intelligent) ({TRAIT_QUICK}) ({TRAIT_INTELLIGENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
#enddef
#define TRAIT_IF NUMBER TRAITDESC TRAIT1 TRAIT2 TYPE DESC SIDE X Y
    [if]
        [variable]
            name=random
            equals={NUMBER}
        [/variable]
        [then]
            [unit]
                side={SIDE}
                type={TYPE}
                description={DESC}
                user_description={DESC}
                upkeep=full
                x={X}
                y={Y}
                [modifications]
                    {TRAIT1}
                    {TRAIT2}
                [/modifications]
            [/unit]
        [/then]
    [/if]
#enddef
#define PROFITABLE_TERRAIN X Y GOLD
    #This macro assumes that initial income is 3
    [event]
        name=prestart
        {VARIABLE (ano_{X}_{Y}) not_taken}
        {VARIABLE ano_income 3}
    [/event]
    [event]
        name=victory
        {CLEAR_VARIABLE (ano_{X}_{Y})}
        {CLEAR_VARIABLE ano_income}
    [/event]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
        [/filter]
        {IF (ano_{X}_{Y}) equals not_taken}
        {VARIABLE_OP ano_income add ({GOLD})}
        [modify_side]
            side=1
            income=$ano_income
        [/modify_side]
        {VARIABLE (ano_{X}_{Y}) taken}
        {END_IF_WITHOUT_ELSE}
    [/event]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            [not]
                side=1
            [/not]
        [/filter]
        {IF (ano_{X}_{Y}) equals taken}
        {VARIABLE_OP ano_income add (-{GOLD})}
        [modify_side]
            side=1
            income=$ano_income
        [/modify_side]
        {VARIABLE (ano_{X}_{Y}) not_taken}
        {END_IF_WITHOUT_ELSE}
    [/event]
#enddef
#define MAKE_LOYAL OP WHAT
    {CLEAR_VARIABLE ano_loyal}
    [store_unit]
        variable=ano_loyal
        [filter]
            {OP}={WHAT}
            side=1
        [/filter]
        #kill=yes
        #fire_event=no
        #animate=no
    [/store_unit]
    {MSG_narrator _"The unit $ano_loyal[0].user_description became LOYAL."}
    {VARIABLE (ano_loyal[0].traits_description) ("$ano_loyal[0].traits_description" + _"loyal")}
    {VARIABLE (ano_loyal[0].upkeep) ("free")}
    {VARIABLE (ano_loyal[0].modifications.trait[2].id) ("loyal")}
    {VARIABLE (ano_loyal[0].modifications.trait[2].name) (_"loyal")}
    {VARIABLE (ano_loyal[0].modifications.trait[2].effect.apply_to) ("loyal")}
    {VARIABLE (ano_loyal[0].modifications.trait[2].description) (_"Zero upkeep")}
    [unstore_unit]
        variable=ano_loyal[0]
    [/unstore_unit]
    {CLEAR_VARIABLE ano_loyal}
#enddef

#define OBJECTIVE_NOTES _NOTES_TEXT
    note="*"+_"Scenario notes:"+"
"+{_NOTES_TEXT}
#enddef
